% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/before.R
\name{before}
\alias{after}
\alias{before}
\title{Extract the Elements of a Path Before/After a Regex Occurrence}
\usage{
before(x, pattern, include = FALSE, collapse = TRUE, ...)

after(x, pattern, include = FALSE, collapse = TRUE, ...)
}
\arguments{
\item{x}{A \code{parse_path} object.}

\item{pattern}{A character string containing a regular expression (or
character string for \code{fixed = TRUE}) to be matched in the given character
vector. Note that under the hood \code{\link[base]{grep}} is used to locate
the indices of path elements that match the regex condition.  Only the first
match will be used.  The argument \code{perl = TRUE} is hard coded.}

\item{include}{logical.  If \code{TRUE} the element with the regex match will
be included in the reconstructed sub-path.}

\item{collapse}{logical.  If \code{TRUE} the path elements will be collapsed
with the \code{"/"} separator.}

\item{\ldots}{ignored.}
}
\value{
Returns a vector (either \code{atomic} or \code{\link[base]{list}} of
\code{character} path elements) of sub-paths.
}
\description{
Extract the elements of a path before/after a regex occurrence.
Stands in contrast to \code{front},\code{back}, and index in that with the
later three are element number/index focused whereas
\code{before}/\code{after} are content focused.
}
\examples{
(parsed <- list(c("a", "really", "boring", "path", "for", "R")))
before(parsed, "^bor")
before(parsed, "^bor", include = TRUE)

after(parsed, "^bor")
after(parsed, "^bor", include = TRUE)

library(magrittr)
files \%>\%
    parse_path() \%>\%
    after("^qdap$")

files \%>\%
    parse_path() \%>\%
    after("^qdap$", include = TRUE)

files \%>\%
    parse_path() \%>\%
    before("\\\\.R$")
}
\seealso{
Other sub.path.manipulation.functions: \code{\link{front}},
  \code{\link{index}}, \code{\link{swap}}
}

